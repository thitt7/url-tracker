FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base as deps
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY frontend/next/package*.json ./
RUN npm install --omit-dev

FROM base AS dev
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY frontend/next/package*.json ./
COPY frontend/next ./

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY frontend/next ./

# Declare build arguments
ARG BACKEND
ARG DOTNET_PORT
ARG NEXT_PUBLIC_API_URL
ARG NEXT_SERVER_PORT
ARG NEXT_PUBLIC_DOMAIN

# Set the build arguments as environment variables
ENV BACKEND=${BACKEND}
ENV DOTNET_PORT=${DOTNET_PORT}
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_SERVER_PORT=${NEXT_SERVER_PORT}
ENV NEXT_PUBLIC_DOMAIN=${NEXT_PUBLIC_DOMAIN}

ENV NEXT_TELEMETRY_DISABLED=1

RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner

WORKDIR /app

ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/next.config.mjs ./next.config.mjs
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 4000
ENV PORT=4000

CMD HOSTNAME="0.0.0.0" node server.js
